import React, { useEffect, useState } from 'react';
import styles from './index.module.css';
import api from '@/services/api';

export default function FormAgendamentos({ selectedAgend, setSelectedAgend, isViewing, handleSubmit, isEditing }) {
    const [veiculos, setVeiculos] = useState([]);
    const [errors, setErrors] = useState('');

    // Map para estados de situação
    const agendSituacaoMap = {
        1: 'Pendente',
        2: 'Em andamento',
        3: 'Concluído',
        4: 'Cancelado',
    };

    // Controle de habilitação dos inputs
    const isDisabled = isViewing || !isEditing;

    useEffect(() => {
        const ListarVeiculosUsuario = async () => {
            if (selectedAgend?.usu_id) {
                try {
                    const response = await api.get(`/veiculoUsuario/usuario/${selectedAgend.usu_id}`);
                    setVeiculos(response.data.dados || []);
                } catch (error) {
                    setErrors('Erro ao buscar veículos. Por favor, tente novamente.');
                    console.error('Erro ao buscar veículos:', error);
                }
            }
        };

        ListarVeiculosUsuario();
    }, [selectedAgend?.usu_id]);

    const handleInputChange = (field, value) => {
        // Atualizando estado sem usar callbacks no setState
        setSelectedAgend({
            ...selectedAgend,
            [field]: value,
        });
    };

    return (
        <form id="clienteForm" className={styles.form} onSubmit={handleSubmit}>
            <input type="hidden" id="clienteId" value={selectedAgend?.usu_id || ''} />

            <div className={`${styles.grid_item} ${styles.grid_codigo}`}>
                {/* Código */}
                <div className={styles.grid_item}>
                    <label htmlFor="agend_id" className={styles.label_cliente}>Código</label>
                    <input
                        type="number"
                        id="agend_id"
                        value={selectedAgend?.agend_id || ''}
                        className={styles.input_cliente}
                        disabled
                    />
                </div>

                {/* Cliente */}
                <div className={`${styles.grid_item} ${styles.grid_nome}`}>
                    <label htmlFor="usu_nome" className={styles.label_cliente}>Cliente</label>
                    <input
                        type="text"
                        id="usu_nome"
                        value={selectedAgend?.usu_nome || ''}
                        onChange={(e) => handleInputChange('usu_nome', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isDisabled}
                    />
                </div>

                
                <div className={`${styles.grid_item} ${styles.grid_cpf}`}>
                    <label htmlFor="cat_serv_nome" className={styles.label_cliente}>Categoria do Serviço</label>
                    <input
                        type="text"
                        id="cat_serv_nome"
                        value={selectedAgend?.cat_serv_nome || ''}
                        onChange={(e) => handleInputChange('cat_serv_nome', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isDisabled}
                    />
                </div>

                {/* Serviço */}
                <div className={`${styles.grid_item} ${styles.grid_nome}`}>
                    <label htmlFor="serv_nome" className={styles.label_cliente}>Serviço</label>
                    <input
                        type="text"
                        id="serv_nome"
                        value={selectedAgend?.serv_nome || ''}
                        onChange={(e) => handleInputChange('serv_nome', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isDisabled}
                    />
                </div>

                {/* Data do Agendamento */}
                <div className={`${styles.grid_item} ${styles.grid_nome}`}>
                    <label htmlFor="agend_data" className={styles.label_cliente}>Data do Agendamento</label>
                    <input
                        type="date"
                        id="agend_data"
                        value={selectedAgend?.agend_data || ''}
                        onChange={(e) => handleInputChange('agend_data', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isDisabled}
                    />
                </div>

                {/* Horário */}
                <div className={`${styles.grid_item} ${styles.grid_data}`}>
                    <label htmlFor="agend_horario" className={styles.label_cliente}>Horário</label>
                    <input
                        type="time"
                        id="agend_horario"
                        value={selectedAgend?.agend_horario || ''}
                        onChange={(e) => handleInputChange('agend_horario', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isDisabled}
                    />
                </div>

                {/* Placa */}
                <div className={`${styles.grid_item} ${styles.grid_data}`}>
                    <label htmlFor="veic_placa" className={styles.label_cliente}>Placa</label>
                    {isViewing ? (
                        <input
                            type="text"
                            id="veic_placa"
                            value={selectedAgend?.veic_placa || ''}
                            className={styles.input_cliente}
                            disabled
                        />
                    ) : (
                        <select
                            id="veiculo"
                            className={styles.input_cliente}
                            value={selectedAgend?.veic_id || ''}
                            onChange={(e) => handleInputChange('veic_id', e.target.value)}
                        >
                            {veiculos.map((veiculo) => (
                                <option key={veiculo.veic_id} value={veiculo.veic_id}>
                                    {veiculo.veic_placa}
                                </option>
                            ))}
                        </select>
                    )}
                </div>

                {/* Observações */}
                <div className={`${styles.grid_item} ${styles.grid_telefone}`}>
                    <label htmlFor="agend_observ" className={styles.label_cliente}>Observações</label>
                    <input
                        type="text"
                        id="agend_observ"
                        value={selectedAgend?.agend_observ || ''}
                        onChange={(e) => handleInputChange('agend_observ', e.target.value)}
                        className={styles.input_cliente}
                        disabled={isViewing}
                    />
                </div>

                {/* Situação */}
                <div className={`${styles.grid_item} ${styles.grid_telefone}`}>
                    <label htmlFor="agend_serv_situ_id" className={styles.label_cliente}>Situação</label>
                    <input
                        type="text"
                        id="agend_serv_situ_id"
                        value={agendSituacaoMap[selectedAgend?.agend_serv_situ_id] || ''}
                        className={styles.input_cliente}
                        disabled
                    />
                </div>
            </div>

            {/* Exibição de Erros */}
            {errors && <p className={styles.error_message}>{errors}</p>}
        </form>
    );
}
