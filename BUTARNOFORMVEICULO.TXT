module.exports = {
    listarVeiculos,
    listarVeiculoPorPlaca,
    cadastrarVeiculo,
    editarVeiculo,
    excluirVeiculo,
    ocultarVeiculo,
    visualizarVeiculo,
    verificarPlaca // Adicione esta linha
}

-----------------------

async verificarPlaca(request, response) {
    try {
        const { veic_placa } = request.body;

        if (!veic_placa) {
            return response.status(400).json({
                sucesso: false,
                mensagem: 'Placa não fornecida.',
            });
        }

        const sql = `SELECT veic_id FROM veiculos WHERE veic_placa = ? LIMIT 1`;
        const values = [veic_placa.toUpperCase()]; // Garantir que a busca seja case-insensitive

        const [result] = await db.query(sql, values);

        if (result.length > 0) {
            // Placa já existe
            return response.status(400).json({
                sucesso: false,
                mensagem: 'Placa já cadastrada.',
            });
        }

        // Placa disponível
        return response.status(200).json({
            sucesso: true,
            mensagem: 'Placa disponível.',
        });
    } catch (error) {
        return response.status(500).json({
            sucesso: false,
            mensagem: 'Erro no servidor.',
            dados: error.message
        });
    }
}

------------------

router.post('/verificar-placa', veiculoController.verificarPlaca);

---------------------
async cadastrarVeiculo(request, response) {
    try {
        const {
            mod_id,
            veic_placa,
            veic_ano,
            veic_cor,
            veic_combustivel,
            veic_observ,
            veic_situacao
        } = request.body;

        // Verificar se a placa já existe
        const verificarSql = `SELECT veic_id FROM veiculos WHERE veic_placa = ? LIMIT 1`;
        const verificarValues = [veic_placa.toUpperCase()];
        const [verificarResult] = await db.query(verificarSql, verificarValues);

        if (verificarResult.length > 0) {
            // Placa já cadastrada
            return response.status(400).json({
                sucesso: false,
                mensagem: 'Placa já cadastrada.',
            });
        }

        // Inserir o veículo já que a placa é única
        const sql = `INSERT INTO veiculos 
            (mod_id, veic_placa, veic_ano, veic_cor, veic_combustivel, veic_observ, veic_situacao) 
            VALUES (?, ?, ?, ?, ?, ?, ?)`;

        const values = [
            mod_id,
            veic_placa.toUpperCase(), // Garantir que a placa seja armazenada em maiúsculas
            veic_ano,
            veic_cor,
            veic_combustivel,
            veic_observ,
            veic_situacao
        ];

        const [execSql] = await db.query(sql, values);
        const veic_id = execSql.insertId;

        return response.status(200).json({
            sucesso: true,
            mensagem: 'Cadastro de veículo efetuado com sucesso.',
            dados: veic_id
        });
    } catch (error) {
        return response.status(500).json({
            sucesso: false,
            mensagem: 'Erro na requisição.',
            dados: error.message
        });
    }
}

-----------------------
